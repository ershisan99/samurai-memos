---
import Author from "./Author.astro";
import TableOfContents from "./TableOfContents/TableOfContents";
import generateToc from "../util/generateToc";
export interface Props {
  title: string;
  author: string;
  authorURL: string;
  publishDate: string;
  alt: string;
  headings: any;
}

const { title, author, authorURL, publishDate, alt, headings } =
  Astro.props as Props;
---

<div class="layout">
  <main class="content-container">
    {
      headings && (
        <aside>
          <nav class="toc-post">
            <TableOfContents
              client:media="(min-width: 72em)"
              toc={generateToc(headings, "Вступление")}
              labels={{
                onThisPage: "Содержание",
              }}
              isMobile={false}
            />
          </nav>
        </aside>
      )
    }
    <div class="main-content flex justify-center">
      <div class="prose dark:prose-invert">
        <header class="mb-10" id="overview">
          <h1 class="mb-2 text-5xl font-bold" id="overview">{title}</h1>
          <Author name={author} href={authorURL} />
        </header>
        <article class="prose dark:prose-invert">
          <slot />
        </article>
      </div>
    </div>
  </main>
</div>

<script>
  const moveTocTo = document.querySelector(".content-container");
  const toc = document.querySelector(".toc-post");
  if (toc && moveTocTo) {
    moveTocTo.prepend(toc);
  }
  // const observer = new IntersectionObserver(
  //   (entries) => {
  //     entries.forEach((entry) => {
  //       if (entry.isIntersecting) {
  //         entry.target.classList.add("active");
  //       } else {
  //         entry.target.classList.remove("active");
  //       }
  //     });
  //   },
  //   { threshold: 0.5 }
  // );
  // observer.observe(document.querySelector(".toc-post"));
  // const links = document.querySelectorAll("a.toc-link");

  // updateLinks();
  // window.addEventListener("hashchange", updateLinks);

  // function updateLinks() {
  //   // add active class to toc link if it's the current page

  //   links.forEach((link: HTMLAnchorElement) => {
  //     if (link.hash === window.location.hash) {
  //       link.classList.add("active");
  //       return;
  //     }
  //     link.classList.remove("active");
  //   });
  // }
</script>
